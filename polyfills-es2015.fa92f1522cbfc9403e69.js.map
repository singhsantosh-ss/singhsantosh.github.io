{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","messagePart","rawMessagePart","charAt","substring","cooked","cookedIndex","rawIndex","Error","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Zone","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","prototype","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","Symbol","toStringTag","species","C","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","Promise","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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EAAQ9E,EAAMob,EAAMnT,IAEnDiI,EAAInF,sBAAsBjG,EAAOmW,GAASE,GAU9C,MAwGMI,EAAmB,CACrB,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,qBACA,wBACA,0BAOEC,EAAyB,CAAC,YAAa,gBAAiB,YAAa,oBAAqB,mBA6D1FC,EAAkB,CAAC,QACnBC,EAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,EAAoB,CAAC,SAAU,SAAU,SACzCC,EAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBA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","file":"x","sourcesContent":["/**\n * @license Angular v11.2.7\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#mark-text-for-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n\nexport { $localize };\n//# sourceMappingURL=init.js.map\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"]}